swagger: '2.0'
info:
  title: GetYoGirlAGift API
  description: Simple tester for the GetYoGirlAGift API
  version: 1.0.0
host: getyogirlagift.azurewebsites.net
schemes:
  - http
paths:
  /token:
    post:
      summary: Returns a token
      
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - in: formData
          name: username
          type: string
        - in: formData
          name: password
          type: string
        - in: formData
          name: grant_type
          type: string
        
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              access_code:
                type: string
              token_type:
                type: string
              expires_in:
                type: integer
        404:
          description: URL Not Found
  
  /api/users/login:
    post:
      summary: Login user
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: LoginRequest
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
               type: integer
              Success:
                type: boolean
              User:
                $ref: '#/definitions/User'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400: 
          description: URL Not Found
        
  /api/users/signup:
    post:
      summary: Sign up new user
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: SignupRequest
          schema:
            $ref: '#/definitions/SignupRequest'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: integer
              Success:
                type: integer
              User:
                $ref: '#/definitions/User'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
  
  /api/users/manage:
    post:
      summary: Change Password
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: PasswordRequest
          schema:
            $ref: '#/definitions/PasswordRequest'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: integer
              Success:
                type: integer
              User:
                $ref: '#/definitions/User'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
  
  /api/Girls/forUser/{userId}:
    get:
      summary: Get all girls for a specific user
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
          description: Id of user
      security:
        - Bearer: []
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: integer
              Girl:
                $ref: '#/definitions/Girl'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
  
  /api/Girls:
    post:
      summary: Add a Girl
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Girl
          schema:
            $ref: '#/definitions/Girl'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: string
              Girl:
                $ref: '#/definitions/Girl'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
  
    put:
      summary: Edit Girl
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: girlId
          type: integer
          required: true
          description: Girl's Id to be edited
        - in: body
          name: Girl
          schema:
            $ref: '#/definitions/Girl'
      responses:
        200:
          description: OK
          schema:
            type: string
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
          
    delete:
      summary: Delete Girl
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: query
          name: girlId
          type: integer
          required: true
          description: Girl's Id to be deleted
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: integer
              Success:
                type: integer
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
          
  /api/gifts:
    get:
      summary: Get gifts from Amazon
      security:
        - Bearer: []
      produces:
        - application/json
      parameters:
        - in: query
          name: girlId
          type: integer
          required: true
          description: Girl's Id to search gifts for
        - in: query
          name: occassion
          type: string
          required: true
          description: Occassion for the gift
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              $id:
                type: integer
              Success:
                type: string
              Gift:
                $ref: '#/definitions/Gift'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
  
    post:
      summary: Evaluate a Gift
      security:
        - Bearer: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: girlId
          type: integer
          required: true
          description: Girl's Id to evaluate a gift for
        - in: body
          name: request
          schema:
            type: object
            properties:
              ImageBytes:
                type: array
                items:
                  type: string
                  format: byte
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Rating'
        401:
          description: Authentication not sent or invalid
        403:
          description: Forbidden
          headers: 
            Access-Control-Allow-Origin:
              type: string
        400:
          description: URL Not Found
        

definitions:
  
  LoginRequest:
    type: object
    properties:
      username:
        type: string
        example: "rob123"
      password:
        type: string
        example: "passw0rd"
    required: 
      - username
      - password
    
  SignupRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
    required: 
      - username
      - password
      - email
  
  PasswordRequest:
    type: object
    properties:
      OldPassword:
        type: string
      NewPassword:
        type: string
    required:
      - OldPassword
      - NewPassword
    
  GirlImage: 
    type: object
    properties:
      Id:
        type: integer
      GirlId:
        type: integer
      Image:
        type: array
        items:
          type: string
          format: byte
      IsNew:
        type: boolean
    required: 
      - Id
      - GirlId
      - Image
      - IsNew

          
  
  ImportantDate:
    type: object
    properties:
      Id:
        type: integer
      GirlId:
        type: integer
      Date:
        type: string
        format: date-time
      Occasion:
        type: string
      IsNew:
        type: boolean
        
  Interest:
    type: object
    properties:
      Id:
        type: integer
      GirlId:
        type: integer
      Value:
        type: string
      IsNew:
        type: boolean
    
  
  Girl:
    type: object
    properties:
      Id:
        type: integer
      UserId:
        type: integer
      Relationship:
        type: integer
      Name:
        type: string
      HasInterests:
        type: boolean
      Images:
        type: array
        items:
          $ref: '#/definitions/GirlImage'
      ImportantDates:
        type: array
        items:
          $ref: '#/definitions/ImportantDate'
      Interests:
        type: array
        items:
          $ref: '#/definitions/Interest'
      
  User:
    type: object
    properties:
      id:
        type: integer
      Username:
        type: string
      Password:
        type: string
      Email:
        type: string
      IsEmailVerified:
        type: boolean
      Girls:
        type: array
        items:
          $ref: '#/definitions/Girl'
  
  Price:
    type: object
    properties:
      Name:
        type: string
      Value:
        type: integer
        format: double
      Currency:
        type: string
    required:
      - Name
      - Value
      - Currency
      
    
  Rating:
    type: object
    properties:
      Likability:
        type: integer
        format: double
      ReturnChance:
        type: integer
        format: double
      FriendsJealousy:
        type: integer
        format: double
    required:
      - Likability
      - ReturnChance
      - FriendsJealousy
  
  Gift:
    type: object
    properties:
      Name:
        type: string
      Prices:
        type: array
        items:
          $ref: '#/definitions/Price'
      Picture:
        type: array
        items:
          type: string
          format: byte
      AmazonLink:
        type: string
      Rating:
        $ref: '#/definitions/Rating'
    required:
      - Name
      - Prices
      - Picture
      - AmazonLink
      - Rating
  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
    
    